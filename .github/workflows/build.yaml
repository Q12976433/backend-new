name: Deploy to ECR

on:
 
  push:
    branches: [ trial ]

jobs:
  
  build:
  
    
    name: Build Image
    runs-on: ubuntu-latest

   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2


    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: tmp3
        
        ECS_TASK_DEFINITION: task--revision1.json
        
        IMAGE_TAG: latest
        ECS_SERVICE: service
        ECS_CLUSTER: test
        AWS_TASK_DEFINITION: "arn:aws:ecs:us-east-1:190177667055:task-definition/latest"
   
        
        
        
        
        JWT_ACTIVIATE_SECRET_KEY : ${{ secrets.JWT_ACTIVIATE_SECRET_KEY }}
        MONGO_URL: ${{ secrets.MONGO_URL }}
        EMAIL_CONFIRMATION_URL: ${{ secrets.EMAIL_CONFIRMATION_URL }}
        SALT: ${{ secrets.SALT }}
        DOMAIN: ${{ secrets.DOMAIN }}
        MAILGUN_APIKEY: ${{ secrets.MAILGUN_APIKEY }}
        EXPIRE: ${{ secrets.EXPIRE }}
        EMAIL_SEND: ${{ secrets.EMAIL_SEND }}
        SERVER_PORT: ${{ secrets.SERVER_PORT }}
        JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        SENDER_EMAIL_PASSWORD: ${{ secrets.SENDER_EMAIL_PASSWORD }}
        MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
        MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
      run: |
        docker build \
        --build-arg JWT_ACTIVIATE_SECRET_KEY="$JWT_ACTIVIATE_SECRET_KEY" \
        --build-arg MAILGUN_APIKEY="$MAILGUN_APIKEY" \
        --build-arg SERVER_PORT="$SERVER_PORT" \
        --build-arg MONGO_URL="$MONGO_URL" \
        --build-arg EMAIL_CONFIRMATION_URL="$EMAIL_CONFIRMATION_URL" \
        --build-arg SALT="$SALT" \
        --build-arg DOMAIN="$DOMAIN" \
        --build-arg EXPIRE="$EXPIRE" \
        --build-arg MAILGUN_DOMAIN="$MAILGUN_DOMAIN" \
        --build-arg MAILGUN_API_KEY="$MAILGUN_API_KEY" \
        --build-arg SENDER_EMAIL_PASSWORD="$SENDER_EMAIL_PASSWORD" \
        --build-arg SENDER_EMAIL="$SENDER_EMAIL" \
        --build-arg JWT_SECRET_KEY="$JWT_SECRET_KEY" \
        --build-arg EMAIL_SEND="$EMAIL_SEND" \
        -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
 #ecs service


     
 #   - name: Deploy Amazon ECS task definition
 #     uses: aws-actions/amazon-ecs-deploy-task-definition@de0132cf8cdedb79975c6d42b77eb7ea193cf28e
 #     with:
 #       task-definition: task--revision1.json
        #task-definition: ${{env.AWS_TASK_DEFINITION}}
  #      service: ${{ env.ECS_SERVICE }}
  #      cluster: ${{ env.ECS_CLUSTER }}
   #     wait-for-service-stability: true
    - name: describe
      run:
       aws ecs describe-task-definition --task-definition arn:aws:ecs:us-east-1:190177667055:task-definition/task-:8\
       --output > task-definition.json
    
   
          
          
 




